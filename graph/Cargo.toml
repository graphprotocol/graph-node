[package]
name = "graph"
version.workspace = true
edition.workspace = true

[dependencies]
base64 = "=0.21.7"
anyhow = "1.0"
async-trait = "0.1.74"
async-stream = "0.3"
atomic_refcell = "0.1.13"
# We require this precise version of bigdecimal. Updating to later versions
# has caused PoI differences; if you update this version, you will need to
# make sure that it does not cause PoI changes
old_bigdecimal = { version = "=0.1.2", features = ["serde"], package = "bigdecimal" }
bytes = "1.0.1"
bs58 = { workspace = true }
cid = "0.11.1"
derivative = { workspace = true }
graph_derive = { path = "./derive" }
diesel = { workspace = true }
diesel_derives = { workspace = true }
chrono = "0.4.38"
envconfig = "0.10.0"
Inflector = "0.11.3"
isatty = "0.1.9"
reqwest = { version = "0.12.5", features = ["json", "stream", "multipart"] }
ethabi = "17.2"
hex = "0.4.3"
http0 = { version = "0", package = "http" }
http = "1"
hyper = { version = "1", features = ["full"] }
http-body-util = "0.1"
hyper-util = { version = "0.1", features = ["full"] }
futures01 = { package = "futures", version = "0.1.31" }
lru_time_cache = "0.11"
graphql-parser = "0.4.0"
humantime = "2.1.0"
lazy_static = "1.5.0"
num-bigint = { version = "=0.2.6", features = ["serde"] }
num-integer = { version = "=0.1.46" }
num-traits = "=0.2.19"
rand = "0.8.4"
regex = "1.5.4"
semver = { version = "1.0.23", features = ["serde"] }
serde = { workspace = true }
serde_derive = { workspace = true }
serde_json = { workspace = true }
serde_regex = { workspace = true }
serde_yaml = { workspace = true }
slog = { version = "2.7.0", features = [
    "release_max_level_trace",
    "max_level_trace",
] }
sqlparser = { workspace = true }
# TODO: This should be reverted to the latest version once it's published
# stable-hash_legacy = { version = "0.3.3", package = "stable-hash" }
# stable-hash = { version = "0.4.2" }
stable-hash = { git = "https://github.com/graphprotocol/stable-hash", branch = "main" }
stable-hash_legacy = { git = "https://github.com/graphprotocol/stable-hash", branch = "old", package = "stable-hash", doc = false }
strum_macros = "0.26.4"
slog-async = "2.5.0"
slog-envlogger = "2.1.0"
slog-term = "2.7.0"
petgraph = "0.6.5"
tiny-keccak = "1.5.0"
tokio = { version = "1.38.0", features = [
    "time",
    "sync",
    "macros",
    "test-util",
    "rt-multi-thread",
    "parking_lot",
] }
tokio-stream = { version = "0.1.15", features = ["sync"] }
tokio-retry = "0.3.0"
toml = "0.8.8"
url = "2.5.2"
prometheus = "0.13.4"
priority-queue = "2.0.3"
tonic = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }

futures03 = { version = "0.3.1", package = "futures", features = ["compat"] }
wasmparser = "0.118.1"
thiserror = "1.0.25"
parking_lot = "0.12.3"
itertools = "0.13.0"
defer = "0.2"

# Our fork contains patches to make some fields optional for Celo and Fantom compatibility.
# Without the "arbitrary_precision" feature, we get the error `data did not match any variant of untagged enum Response`.
web3 = { git = "https://github.com/graphprotocol/rust-web3", branch = "graph-patches-onto-0.18", features = [
    "arbitrary_precision", "test"
] }
serde_plain = "1.0.2"
csv = "1.3.0"
object_store = { version = "0.11.0", features = ["gcp"] }

[dev-dependencies]
clap.workspace = true
maplit = "1.0.2"
hex-literal = "0.4"
wiremock = "0.6.1"

[build-dependencies]
tonic-build = { workspace = true }
