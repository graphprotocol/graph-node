[package]
name = "graph"
version = "0.5.0"

[dependencies]
backtrace = "0.3.9"
diesel = { version = "1.3.2", features = ["postgres", "serde_json", "numeric", "r2d2"] }

# Switch to upstream master once https://github.com/paritytech/ethabi/pull/145 is merged.
ethabi = { git = "https://github.com/graphprotocol/ethabi.git", branch = "graph-patches" }
hex = "0.3.2"
futures = "0.1.21"
graphql-parser = "0.2.1"
ipfs-api = "0.5.0-alpha2"
parity-wasm = "0.31"
failure = "0.1.2"
lazy_static = "1.2.0"
num-bigint = { version = "^0.2.2", features = ["serde"] }
rand = "0.6.1"
serde = "1.0"
serde_derive = "1.0"

# Pin to serde_json 1.0.25. Newer releases use ryu instead of dtoa for floating
# point (de)serialization, which caused test failures. What may be happening
# here is that we write entities to the store with f32 values and then what
# comes back when deserializing is not f32 and so serde_json cannot match float
# values to our Value::Float(f32) variant. Would have to investigate further how
# we can fix this.
serde_json = { version = "=1.0.25", features = ["arbitrary_precision"] }
serde_yaml = "0.7"
slog = { version = "2.2.3", features = ["release_max_level_debug", "max_level_trace"] }
slog-async = "2.3.0"
slog-envlogger = "2.1.0"
slog-term = "2.4.0"
tiny-keccak = "1.0"
tokio = "0.1.11"
tokio-executor = "0.1.5"
tokio-retry = "0.2"
tokio-timer = "0.2.7"
web3 = "0.5.0"
