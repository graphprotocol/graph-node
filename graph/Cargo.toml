[package]
name = "graph"
version = "0.17.1"
edition = "2018"

[dependencies]
async-trait = "0.1.24"
bigdecimal = { version = "0.0.14", features = ["serde"] }
diesel = { version = "1.4.3", features = ["postgres", "serde_json", "numeric", "r2d2"] }
chrono = "0.4"
isatty = "0.1"
reqwest = "0.10"

# master contains changes such as
# https://github.com/paritytech/ethabi/pull/140, which upstream does not want
# and we should try to implement on top of ethabi instead of inside it, and
# tuple support which isn't upstreamed yet. For now, we shall deviate from
# ethabi, but long term we want to find a way to drop our fork.
ethabi = { git = "https://github.com/graphprotocol/ethabi.git", branch = "master" }
hex = "0.4.0"
futures = "0.1.21"
graphql-parser = "0.2.3"
ipfs-api = { version = "0.6.0-rc", features = ["hyper-tls"] }
parity-wasm = "0.40"
failure = "0.1.6"
lazy_static = "1.2.0"
mockall = "0.6"
num-bigint = { version = "^0.2.6", features = ["serde"] }
num-traits = "0.2"
rand = "0.6.1"
semver = "0.9.0"
serde = "1.0"
serde_derive = "1.0"
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
serde_yaml = "0.8"
slog = { version = "2.5.2", features = ["release_max_level_trace", "max_level_trace"] }
slog-async = "2.3.0"
slog-envlogger = "2.1.0"
slog-term = "2.5.0"
petgraph = "0.5.0"
tiny-keccak = "1.5.0"
tokio = { version = "0.2.13", features = ["stream", "rt-threaded", "rt-util", "blocking", "time", "sync", "macros", "test-util"] }
tokio-retry = { git = "https://github.com/graphprotocol/rust-tokio-retry", branch = "update-to-tokio-02" }
url = "1.7.2"
prometheus = "0.7.0"
priority-queue = "0.6.0"
futures03 = { version = "0.3.1", package = "futures", features = ["compat"] }

# Our fork contains a small but hacky patch.
web3 = { git = "https://github.com/graphprotocol/rust-web3", branch = "master" }
